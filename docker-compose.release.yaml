networks:
  net:
    driver: bridge

services:
  akhq:
    container_name: akhq
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            sensors-simulator:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - net

  zookeeper:
    container_name: zookeeper
    image: zookeeper
    volumes:
      - ./volumes/zookeeper-data:/var/lib/zookeeper/data:Z
      - ./volumes/zookeeper-log:/var/lib/zookeeper/log:Z
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_ADMIN_ENABLE_SERVER: 'false'
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
    ports:
      - "2181:2181"
    networks:
      - net

  kafka:
    container_name: utils
    image: bitnami/kafka:latest
    volumes:
      - ./volumes/utils-data:/var/lib/utils/data:Z
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_NUM_PARTITIONS=12
      - KAFKA_COMPRESSION_TYPE='gzip'
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://utils:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ADVERTISED_HOST=localhost
    healthcheck:
      test: [ "CMD-SHELL", "utils-topics.sh --bootstrap-server 127.0.0.1:9092 --list" ]
      interval: 5s
    ports:
      - '9092:9092'
      - '9094:9094'
    depends_on:
      - zookeeper
    networks:
      - net

  simulator:
    container_name: simulator
    environment:
      - KAFKA_HOST=utils
      - KAFKA_PORT=9092
      - KAFKA_TOPIC=readings
      - KAFKA_MAX_BLOCK_MS=1000
      - MAX_WORKERS=6
      - LOG_LEVEL='INFO'
    build:
      context: ./simulator
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - net
