networks:
  redpanda_network:
    driver: bridge

services:
  redpanda:
    container_name: redpanda
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
      - --overprovisioned
      - --default-log-level=warn
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.11
    volumes:
      - ./volumes/redpanda:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  redpanda_console:
    container_name: redpanda_console
    image: docker.redpanda.com/redpandadata/console:v2.4.6
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - 8080:8080
    depends_on:
      - redpanda
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083

  connect:
    container_name: connect
    image: docker.redpanda.com/redpandadata/connectors:latest
    volumes:
      - ./connectors/plugins:/opt/kafka/connect-plugins
    hostname: connect
    ports:
      - "8083:8083"
    depends_on:
      - redpanda
    networks:
      - redpanda_network
    environment:
      CONNECT_CONFIGURATION: |
        key.converter=java.lang.String
        value.converter=java.lang.String
        plugin.path=/opt/kafka/connect-plugins
        value.converter=io.confluent.connect.avro.AvroConverter
        value.converter.schema.registry.url=http://redpanda:8081
        group.id=connectors-group
        offset.storage.topic=_connectors_offsets
        config.storage.topic=_connectors_configs
        status.storage.topic=_connectors_status
        config.storage.replication.factor=-1
        offset.storage.replication.factor=-1
        status.storage.replication.factor=-1
      CONNECT_BOOTSTRAP_SERVERS: "redpanda:9092"
      CONNECT_GC_LOG_ENABLED: "false"
      CONNECT_HEAP_OPTS: -Xms1G -Xmx1G
      CONNECT_METRICS_ENABLED: "false"
      CONNECT_TLS_ENABLED: "false"
      CONNECT_PLUGIN_PATH: "/opt/kafka/connect-plugins"

  clickhouse:
    image: clickhouse/clickhouse-server:24-alpine
    hostname: clickhouse
    container_name: clickhouse
    ports:
      - "8123:8123"
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 5s
      timeout: 1m
      retries: 12
    environment:
      CLICKHOUSE_DB: sensors
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: admin
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - ./clickhouse/timezone.xml:/etc/clickhouse-server/config.d/timezone.xml
      - ./clickhouse/init:/docker-entrypoint-initdb.d
    depends_on:
      - redpanda
    networks:
      - redpanda_network

  grafana:
    image: grafana/grafana-oss:10.3.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards_config:/var/lib/grafana/dashboards
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource, vertamedia-clickhouse-datasource
      DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL}
    depends_on:
      - clickhouse
    networks:
      - redpanda_network
